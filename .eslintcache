[{"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\index.js":"1","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\serviceWorker.js":"2","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\app\\store.js":"3","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\App.js":"4","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\HomeScreen.js":"5","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\Nav.js":"6","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\Banner.js":"7","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\axios.js":"8","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\Requests.js":"9","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\Row.js":"10","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\LoginScreen.js":"11","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\SignInScreen.js":"12","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\firebase.js":"13","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\features\\userSlice.js":"14","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\ProfileScreen.js":"15","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\SignUp.js":"16","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\PlanScreen.js":"17"},{"size":644,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":186,"mtime":1612535243701,"results":"21","hashOfConfig":"19"},{"size":1336,"mtime":1612540608107,"results":"22","hashOfConfig":"19"},{"size":989,"mtime":1612431598833,"results":"23","hashOfConfig":"19"},{"size":1136,"mtime":1612538930537,"results":"24","hashOfConfig":"19"},{"size":1503,"mtime":1612442628777,"results":"25","hashOfConfig":"19"},{"size":140,"mtime":1612427050665,"results":"26","hashOfConfig":"19"},{"size":713,"mtime":1612428768926,"results":"27","hashOfConfig":"19"},{"size":3976,"mtime":1612608631803,"results":"28","hashOfConfig":"19"},{"size":1512,"mtime":1612547292318,"results":"29","hashOfConfig":"19"},{"size":1432,"mtime":1612545910797,"results":"30","hashOfConfig":"19"},{"size":528,"mtime":1612526157458,"results":"31","hashOfConfig":"19"},{"size":462,"mtime":1612535199833,"results":"32","hashOfConfig":"19"},{"size":1456,"mtime":1612601524693,"results":"33","hashOfConfig":"19"},{"size":1912,"mtime":1612609008051,"results":"34","hashOfConfig":"19"},{"size":1630,"mtime":1612608900712,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"reh93q",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\index.js",[],["74","75"],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\serviceWorker.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\app\\store.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\App.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\HomeScreen.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\Nav.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\Banner.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\axios.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\Requests.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\Row.js",["76","77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Row.css\";\r\nimport axios from \"../axios\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ThumbDownAltOutlinedIcon from \"@material-ui/icons/ThumbDownAltOutlined\";\r\nimport { YouTube } from \"@material-ui/icons\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [modalBanner, setModalBanner] = useState(\"\");\r\n  const [modalTtle, setModalTitle] = useState(\"\");\r\n  const [modalDescription, setModalDescription] = useState(\"\");\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [movieName, setMovieName] = useState();\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  const handleOpen = (movie) => {\r\n    setOpen(true);\r\n    setModalBanner(\r\n      `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`\r\n    );\r\n    setModalTitle(movie.name);\r\n    setModalDescription(movie?.overview);\r\n    // setMovieName(\r\n    //   (movie?.name || \"\").then((url) => {\r\n    //     const urlParams\r\n    //   }).catch((error) => console.log(error))\r\n    // );\r\n  };\r\n  const opts = {\r\n    height: \"449\",\r\n    width: \"82%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  // const playVideo = () => {\r\n  //   if (trailerUrl) {\r\n  //     setTrailerUrl(\"\");\r\n  //   } else {\r\n  //     movieTrailer(movieName);\r\n  //   }\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2> {title} </h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies.map(\r\n          (movie) =>\r\n            ((isLargeRow && movie.poster_path) ||\r\n              (!isLargeRow && movie.backdrop_path)) && (\r\n              <img\r\n                onClick={() => handleOpen(movie)}\r\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                key={movie.id}\r\n                src={`${base_url}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n              />\r\n            )\r\n        )}\r\n        <Modal className=\"row__modal\" open={open} onClose={handleClose}>\r\n          <header\r\n            className=\"row__modalHeader\"\r\n            style={{\r\n              backgroundSize: \"cover\",\r\n              backgroundImage: `url(${modalBanner})`,\r\n              backgroundPosition: \"center center\",\r\n            }}\r\n          >\r\n            <div className=\"row__modalHeaderContents\">\r\n              <h1 className=\"row__modalHeaderTitle\"> {modalTtle} </h1>\r\n              <div className=\"banner__buttons\">\r\n                <button\r\n                  // onClick={() => playVideo(movies)}\r\n                  className=\"banner__button\"\r\n                >\r\n                  Play\r\n                </button>\r\n                <AddCircleOutlineOutlinedIcon className=\"row__modalMuiButton\" />\r\n                <ThumbUpAltOutlinedIcon className=\"row__modalMuiButton\" />\r\n                <ThumbDownAltOutlinedIcon className=\"row__modalMuiButton\" />\r\n              </div>\r\n              <h1 className=\"row__modalDescription\">\r\n                {truncate(modalDescription, 120)}\r\n              </h1>\r\n            </div>\r\n            <div className=\"modal--fadeButton\" />\r\n          </header>\r\n        </Modal>\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\LoginScreen.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\SignInScreen.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\firebase.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\features\\userSlice.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\ProfileScreen.js",[],"C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\SignUp.js",["79"],"import { Modal } from \"@material-ui/core\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport \"../css/SignUp.css\";\r\nimport { auth } from \"../firebase\";\r\n\r\nfunction SignUp() {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        alert(\"Your account is successfully created :)\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        e.preventDefault();\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"signUp\">\r\n      <form>\r\n        <h1>Sign Up</h1>\r\n        <input ref={emailRef} placeholder=\"Email\" type=\"email\" />\r\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\" />\r\n        <button type=\"submit\" onClick={register}>\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n\r\n      <Modal className=\"signUp__modal\" open={open} onClose={handleClose}>\r\n        <header\r\n        // className=\"row__modalHeader\"\r\n        // style={{\r\n        //   backgroundSize: \"cover\",\r\n        //   backgroundImage: `url(\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\")`,\r\n        //   backgroundPosition: \"center center\",\r\n        // }}\r\n        >\r\n          <img\r\n            className=\"modal__logo\"\r\n            src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"modal__content\">\r\n            <h2>{modalMessage}</h2>\r\n          </div>\r\n          <div className=\"modal--fadeButton\" />\r\n        </header>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Dell india\\Desktop\\reacttests\\netflix-challange\\my-app\\src\\components\\PlanScreen.js",["80","81","82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../css/PlanScreen.css\";\r\nimport db from \"../firebase\";\r\n\r\nfunction PlanScreen({ productName, productData }) {\r\n  const [products, setProducts] = useState();\r\n\r\n  //   useEffect(() => {\r\n  //     db.collection(\"products\")\r\n  //       .where(\"active\", \"===\", \"true\")\r\n  //       .get()\r\n  //       .then((querySnapshot) => {\r\n  //         const products = {};\r\n  //         querySnapshot.forEach((productDoc) => {\r\n  //           products(productDoc.id) = productDoc.data();\r\n  //           const priceSnap = productDoc.ref.collection(\"prices\").get();\r\n  //           priceSnap.docs.forEach((price) => {\r\n  //             products[productDoc.id].prices = {\r\n  //               priceId: price.id,\r\n  //               priceData: price.data(),\r\n  //             };\r\n  //           });\r\n  //         });\r\n  //         setProducts(products);\r\n  //       });\r\n  //   }, []);\r\n\r\n  const loadCheckout = () => {\r\n    alert(\r\n      \"Sorry Sonny I didn't have card so I wasn't able to enable stripe function. Love your contents and thank you so so much for providing this much valuable content for free. I've learned a lot from you and I love the way you teach. Once again Sonny thank you, you are hero for all of us :)\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"planScreen\">\r\n      <div className=\"planScreen__plan\">\r\n        <div className=\"planScreen__planInfo\">\r\n          <h5>{productName}</h5>\r\n          <h6>{productData}</h6>\r\n        </div>\r\n        <button onClick={loadCheckout}>Subscribe</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanScreen;\r\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":16,"column":22,"nodeType":"90","messageId":"91","endLine":16,"endColumn":35},{"ruleId":"88","severity":1,"message":"92","line":17,"column":10,"nodeType":"90","messageId":"91","endLine":17,"endColumn":19},{"ruleId":"88","severity":1,"message":"93","line":17,"column":21,"nodeType":"90","messageId":"91","endLine":17,"endColumn":33},{"ruleId":"88","severity":1,"message":"94","line":10,"column":24,"nodeType":"90","messageId":"91","endLine":10,"endColumn":39},{"ruleId":"88","severity":1,"message":"95","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"96","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":10},{"ruleId":"88","severity":1,"message":"97","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":18},{"ruleId":"88","severity":1,"message":"98","line":6,"column":20,"nodeType":"90","messageId":"91","endLine":6,"endColumn":31},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'setTrailerUrl' is assigned a value but never used.","Identifier","unusedVar","'movieName' is assigned a value but never used.","'setMovieName' is assigned a value but never used.","'setModalMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'db' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]